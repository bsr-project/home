/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const EffectScope: typeof import('vue')['EffectScope']
  const _assign: typeof import('lodash')['assign']
  const _chunk: typeof import('lodash')['chunk']
  const _cloneDeep: typeof import('lodash')['cloneDeep']
  const _concat: typeof import('lodash')['concat']
  const _debounce: typeof import('lodash')['debounce']
  const _endsWith: typeof import('lodash')['endsWith']
  const _filter: typeof import('lodash')['filter']
  const _find: typeof import('lodash')['find']
  const _findIndex: typeof import('lodash')['findIndex']
  const _flatten: typeof import('lodash')['flatten']
  const _forEach: typeof import('lodash')['forEach']
  const _get: typeof import('lodash')['get']
  const _has: typeof import('lodash')['has']
  const _includes: typeof import('lodash')['includes']
  const _indexOf: typeof import('lodash')['indexOf']
  const _isArray: typeof import('lodash')['isArray']
  const _isEmpty: typeof import('lodash')['isEmpty']
  const _isFunction: typeof import('lodash')['isFunction']
  const _isNull: typeof import('lodash')['isNull']
  const _isNumber: typeof import('lodash')['isNumber']
  const _isObject: typeof import('lodash')['isObject']
  const _isString: typeof import('lodash')['isString']
  const _isUndefined: typeof import('lodash')['isUndefined']
  const _keys: typeof import('lodash')['keys']
  const _last: typeof import('lodash')['last']
  const _map: typeof import('lodash')['map']
  const _parseInt: typeof import('lodash')['parseInt']
  const _pullAt: typeof import('lodash')['pullAt']
  const _random: typeof import('lodash')['random']
  const _reduce: typeof import('lodash')['reduce']
  const _remove: typeof import('lodash')['remove']
  const _slice: typeof import('lodash')['slice']
  const _some: typeof import('lodash')['some']
  const _sortBy: typeof import('lodash')['sortBy']
  const _split: typeof import('lodash')['split']
  const _startsWith: typeof import('lodash')['startsWith']
  const _times: typeof import('lodash')['times']
  const _trim: typeof import('lodash')['trim']
  const _uniqBy: typeof import('lodash')['uniqBy']
  const _uniqueId: typeof import('lodash')['uniqueId']
  const _values: typeof import('lodash')['values']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createPinia: typeof import('pinia')['createPinia']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const getActivePinia: typeof import('pinia')['getActivePinia']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const mapActions: typeof import('pinia')['mapActions']
  const mapGetters: typeof import('pinia')['mapGetters']
  const mapState: typeof import('pinia')['mapState']
  const mapStores: typeof import('pinia')['mapStores']
  const mapWritableState: typeof import('pinia')['mapWritableState']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const setActivePinia: typeof import('pinia')['setActivePinia']
  const setMapStoreSuffix: typeof import('pinia')['setMapStoreSuffix']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useLink: typeof import('vue-router')['useLink']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, InjectionKey, PropType, Ref, VNode } from 'vue'
}
